{"version":3,"sources":["src/components/DataView/CardGroup.js","src/pages/Errors/ApiError/Index.js","webpack:///./src/components/DataView/CardGroup.less?a114","src/metas/ApiError.js"],"names":["_react","_interopRequireWildcard","__webpack_require__","_withErrorHandler","_interopRequireDefault","_IndicatorCard","_isEqual","_CardGroup","CardGroup","default","state","data","this","cardNum","length","createElement","className","styles","cardGroup","map","d","i","_style","float","width","concat","borderRight","key","title","value","style","props","generateData","analysisData","_analysisData$dim_fie","dim_fields","_analysisData$num_fie","num_fields","_analysisData$data","fields","f","alias","reduce","prev","curr","PureComponent","_withAppInfo","_ApiError","_PageView","_Block","_ExplandTable","_BaseChart","_DetailDialog","_MultipleFilter","_DataTab","_find","ANALYSIS_MODEL","sendError","a","console","log","c","Index","explandRowRender","rowData","upperData","dataTabs","name","isSaasApp","_this","date_unit","from_date","to_date","order_by","tenantCode","field","params","filter","Array","isArray","split","orderField","n","extra_num_field","_objectSpread2","analysisModel","DataModel","ApiErrorExplandDetail","tabPreferKey","tabs","chartHeight","navTitle","dataModels","ApiErrorOverview","paginationable","component","minHeight","padding","contentStyle","height","ApiErrorList","detailDialogRender","searchPlaceHolder","openSearch","modalData","appCode","fieldValue","show","onCancel","module","exports","_analysis","_analysis2","DATE_FIELD_NAME","hour","day","ALIAS_TENANT","ALIAS_UUID","ALIAS_REAL_USER_ID","ALIAS_TIME","ALIAS_API_PATH","ALIAS_API_REQUEST_COUNT","ALIAS_API_ERROR_COUNT_PROPORTION","ALIAS_API_ERROR_COUNT","ALIAS_API_500_COUNT","ALIAS_API_502_COUNT","ALIAS_API_503_COUNT","ALIAS_API_504_COUNT","ALIAS_API_ERROR_AFFECTED_USER_COUNT","_classCallCheck2","fomula","operator","sub_name","sub_fomula","sub_trans","formatter","percentFormatter","ApiErrorUserList","page","page_size","model_type","MODE_TYPES","fct","val","dateFormatter","_ref","keyword","static_sort","sortable","defaultSort","dialogDetail","_ref2","tabKey","obj","_objectWithoutProperties2","tabData","tenant_top_10","_toConsumableArray2","chart_type","grid","left","right","value_axis","trend","data_fill","type","yAxisIndex","tooltip","axisPointer","lineStyle","color","opacity","splitLine","category_axis","axisLabel","interval","model"],"mappings":"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","file":"5.d06f7c35.async.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport withErrorHandler from '@/modules/withErrorHandler';\n\nimport IndicatorCard from '@/components/IndicatorCard/IndicatorCard';\n\nimport lodashIsEqual from 'lodash/isEqual';\n\nimport styles from './CardGroup.less';\n\n@withErrorHandler()\nclass CardGroup extends PureComponent {\n  state = {\n    data: []\n  };\n\n  static propTypes = {\n    loading: PropTypes.bool,\n    analysisData: PropTypes.object\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const data = CardGroup.generateData(props.analysisData);\n    if (!lodashIsEqual(data, state.data)) {\n      return { data };\n    }\n    return null;\n  }\n\n  render() {\n    const { data } = this.state;\n    const cardNum = data.length;\n    return (\n      <div className={styles.cardGroup}>\n        {\n          data.map((d, i) => {\n            const _style = {\n              float: 'left',\n              width: `${100 / cardNum}%`,\n              borderRight: i === cardNum - 1 ? '0 none' : '1px solid #EAEAEA'\n            };\n            return (\n              <IndicatorCard\n                key={`${styles.cardGroup}-indicator-card-${d.title}-${i}`}\n                title={d.title}\n                value={d.value}\n                style={_style}\n              />\n            );\n          })\n        }\n      </div>\n    );\n  }\n\n  // 转换数据\n  static generateData(analysisData) {\n    const { dim_fields = [], num_fields = [], data = [] } = analysisData;\n    const fields = [].concat(dim_fields, num_fields);\n    return fields.map(f => ({\n      title: f.alias,\n      value: data.map(d => d[f.alias]).reduce((prev, curr) => (prev + curr))\n    }));\n  }\n}\n\nexport default CardGroup;\n","import React, {PureComponent} from 'react';\n\nimport withAppInfo from '@/modules/withAppInfo';\n\nimport {ApiErrorOverview, ApiErrorList, ApiErrorExplandDetail} from '@/metas/ApiError';\n\nimport PageView from '@/components/PageView/PageView';\nimport Block from '@/components/PageView/Block';\nimport ExplandTable from '@/components/DataView/ExplandTable';\nimport BaseChart from '@/components/DataView/BaseChart';\nimport CardGroup from '@/components/DataView/CardGroup';\nimport DetailDialog from '@/components/DataMiddleware/DetailDialog';\nimport MultipleFilter from '@/components/DataMiddleware/MultipleFilter';\nimport DataTab from '@/components/DataMiddleware/DataTab';\n\nimport lodashFind from 'lodash/find';\n\n// 指定当前页面的analysisModel\nconst ANALYSIS_MODEL = 'api_error';\n\nfunction sendError() {\n  const a = {};\n  console.log(a.c());\n}\n\n@withAppInfo()\nclass Index extends PureComponent {\n  render() {\n    return (\n      <PageView navTitle=\"API请求异常\">\n        <Block title=\"概览\">\n          <MultipleFilter\n            analysisModel={ANALYSIS_MODEL}\n            name={`${ANALYSIS_MODEL}_overview_filter`}\n            dataModels={[{\n              name: `${ANALYSIS_MODEL}_overview`,\n              DataModel: ApiErrorOverview,\n              paginationable: false,\n              component: <CardGroup/>,\n              style: {minHeight: '64px', padding: 0}\n            }]}\n            contentStyle={{height: '88px', minHeight: '88px', padding: '0 0 24px'}}\n          />\n        </Block>\n        <Block title=\"API异常列表\">\n          <MultipleFilter\n            analysisModel={ANALYSIS_MODEL}\n            name={`${ANALYSIS_MODEL}_list_filter`}\n            dataModels={[{\n              name: `${ANALYSIS_MODEL}_list`,\n              DataModel: ApiErrorList,\n              paginationable: true,\n              component: (\n                <ExplandTable\n                  explandRowRender={this.explandRowRender}\n                  detailDialogRender={Index.detailDialogRender}\n                />\n              )\n            }]}\n            searchPlaceHolder=\"请输入API\"\n            openSearch\n          />\n          {sendError()}\n        </Block>\n      </PageView>\n    );\n  }\n\n  // 展开行渲染方法\n  explandRowRender = (rowData, upperData) => {\n    // 当前模块使用的dataTabs\n    const dataTabs = [{\n      name: '租户TOP10',\n      key: 'tenant_top_10',\n      title: '租户API异常TOP10'\n    }, {\n      name: '趋势',\n      key: 'trend',\n      title: 'API异常趋势'\n    }];\n    const {isSaasApp} = this.props;\n    const {\n      date_unit,\n      from_date,\n      to_date,\n      order_by,\n      num_fields,\n      dim_fields,\n      tenantCode\n    } = upperData;\n    const field = dim_fields[0];\n    const params = {\n      date_unit,\n      from_date,\n      to_date,\n      order_by,\n      filter: [`${field.name}$eq(${rowData[field.alias]})`]\n    };\n    if (Array.isArray(order_by) && order_by.length > 0) {\n      const alias = order_by[0].split('$')[0];\n      const orderField = lodashFind(num_fields, n => n.alias === alias);\n      if (orderField) {\n        dataTabs[0].title = `租户${orderField.alias}TOP10`;\n        params.extra_num_field = {...orderField};\n        params.order_by = [order_by[0]];\n      }\n    }\n    return (\n      <DataTab\n        name={`${ANALYSIS_MODEL}_list_detail_${rowData.key}`}\n        analysisModel={ANALYSIS_MODEL}\n        DataModel={ApiErrorExplandDetail}\n        params={params}\n        tabPreferKey={`${ANALYSIS_MODEL}::tab-prefer`}\n        tabs={(isSaasApp && !tenantCode) ? dataTabs : [dataTabs[1]]}\n      >\n        <BaseChart chartHeight=\"280px\"/>\n      </DataTab>\n    );\n  };\n\n  // 弹出对话框渲染\n  static detailDialogRender(modalData, upperData) {\n    const {\n      name,\n      date_unit,\n      from_date,\n      to_date,\n      dim_fields,\n      appCode,\n      tenantCode\n    } = upperData;\n    const field = dim_fields[0];\n    const fieldValue = modalData.rowData[field.alias];\n    const params = {\n      date_unit,\n      from_date,\n      to_date,\n      appCode,\n      tenantCode,\n      filter: [`${field.name}$eq(${fieldValue})`]\n    };\n    return (\n      <DetailDialog\n        analysisModel={ANALYSIS_MODEL}\n        name={`${name}_detail_${fieldValue}`}\n        paginationable={true}\n        DataModel={modalData.DataModel}\n        show={modalData.show}\n        onCancel={modalData.onCancel}\n        params={params}\n        title=\"影响用户\"\n      >\n        <ExplandTable/>\n      </DetailDialog>\n    )\n  }\n}\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGroup\":\"cardGroup___3gbBD\"};","import { percentFormatter, dateFormatter } from '@/utils/analysis';\n\nimport { MODE_TYPES } from '@/constants/analysis';\n\n/* \n  API请求状况各类数据模型\n */\n\n// 日期字段在事实表中的字段名对应\nconst DATE_FIELD_NAME = {\n  hour: 'hour',\n  day: 'dt'\n};\n\n//  API请求状况模型中使用到的别名标准\nconst ALIAS_TENANT = '租户';\nconst ALIAS_UUID = '唯一标识';\nconst ALIAS_REAL_USER_ID = '真实用户';\nconst ALIAS_TIME = '时间';\nconst ALIAS_API_PATH = 'API';\nconst ALIAS_API_REQUEST_COUNT = '请求总数';\nconst ALIAS_API_ERROR_COUNT_PROPORTION = '异常请求占比';\nconst ALIAS_API_ERROR_COUNT = '异常请求总数';\nconst ALIAS_API_500_COUNT = '内部异常';\nconst ALIAS_API_502_COUNT = '服务中断';\nconst ALIAS_API_503_COUNT = '服务不可用';\nconst ALIAS_API_504_COUNT = '请求超时';\nconst ALIAS_API_ERROR_AFFECTED_USER_COUNT = '影响用户数';\n\n// API异常请求概览\nexport class ApiErrorOverview {\n  constructor() {\n    return {\n      num_fields: [\n        {\n          alias: `${ALIAS_API_500_COUNT}（500）`,\n          name: 'status_500',\n          fomula: 'sum'\n        }, {\n          alias: `${ALIAS_API_502_COUNT}（502）`,\n          name: 'status_502',\n          fomula: 'sum'\n        }, {\n          alias: `${ALIAS_API_503_COUNT}（503）`,\n          name: 'status_503',\n          fomula: 'sum'\n        }, {\n          alias: `${ALIAS_API_504_COUNT}（504）`,\n          name: 'status_504',\n          fomula: 'sum'\n        }, {\n          alias: ALIAS_API_ERROR_COUNT_PROPORTION,\n          operator: '/',\n          name: 'incorrect_total',\n          fomula: 'sum',\n          sub_name: 'total',\n          sub_fomula: 'sum',\n          sub_trans: 'numeric',\n          formatter: percentFormatter\n        }\n      ]\n    }\n  }\n}\n\n// API异常影响用户明细列表\nexport class ApiErrorUserList {\n  constructor(params) {\n    return {\n      page: 1,\n      page_size: 10,\n      model_type: MODE_TYPES.fct,\n      dim_fields: [{\n        alias: ALIAS_TENANT,\n        name: 'tenant'\n      }, {\n        alias: ALIAS_REAL_USER_ID,\n        name: 'real_user_id'\n      }, {\n        alias: ALIAS_UUID,\n        name: 'user_id'\n      }, {\n        alias: ALIAS_TIME,\n        name: 'request_time',\n        formatter: val => dateFormatter(val * 1000, 'YYYY.MM.DD HH:MM:SS')\n      }],\n      order_by: [\n        `${ALIAS_TIME}$desc`,\n        `${ALIAS_TENANT}$asc`,\n        `${ALIAS_REAL_USER_ID}$asc`,\n        `${ALIAS_UUID}$asc`\n      ],\n      ...params\n    };\n  }\n}\n\n// API异常列表\nexport class ApiErrorList {\n  constructor({ keyword }) {\n    return {\n      page: 1,\n      page_size: 10,\n      static_sort: `${ALIAS_API_PATH}$asc`,\n      dim_fields: [{\n        alias: ALIAS_API_PATH,\n        name: 'api'\n      }],\n      num_fields: [{\n        alias: ALIAS_API_500_COUNT,\n        name: 'status_500',\n        sortable: true,\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_502_COUNT,\n        name: 'status_502',\n        sortable: true,\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_503_COUNT,\n        name: 'status_503',\n        sortable: true,\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_504_COUNT,\n        name: 'status_504',\n        sortable: true,\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_ERROR_COUNT_PROPORTION,\n        operator: '/',\n        name: 'incorrect_total',\n        fomula: 'sum',\n        sub_fomula: 'sum',\n        sub_name: 'total',\n        sub_trans: 'numeric',\n        sortable: true,\n        formatter: percentFormatter\n      }, {\n        alias: ALIAS_API_ERROR_COUNT,\n        name: 'incorrect_total',\n        sortable: true,\n        defaultSort: 'desc',\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_REQUEST_COUNT,\n        name: 'total',\n        sortable: true,\n        fomula: 'sum'\n      }, {\n        alias: ALIAS_API_ERROR_AFFECTED_USER_COUNT,\n        name: 'users',\n        sortable: true,\n        fomula: 'sum',\n        dialogDetail: ApiErrorUserList\n      }],\n      filter: keyword ? [`api$lk(${keyword})`] : []\n    }\n  }\n}\n\n/* \n  API异常展开详情\n  @params {Object} 额外参数 一般是dataTable展开项的上层参数\n  @tabKey {String} tab切换到的key 在dataTab中间组件中特有\n*/\nexport class ApiErrorExplandDetail {\n  constructor({ extra_num_field, date_unit, order_by, filter, ...obj }, tabKey) {\n    const tabData = {\n      tenant_top_10: {\n        filter: ['tenant$isnet()', ...filter],\n        page: 1,\n        page_size: 10,\n        chart_type: 'barlike_horizon',\n        grid: {\n          left: '10%',\n          right: '10%'\n        },\n        dim_fields: [{\n          alias: ALIAS_TENANT,\n          name: 'tenant'\n        }],\n        num_fields: [{\n          alias: ALIAS_API_ERROR_COUNT,\n          name: 'incorrect_total',\n          fomula: 'sum'\n        }],\n        value_axis: [{\n        }]\n      },\n      trend: {\n        filter,\n        dim_fields: [{\n          alias: ALIAS_TIME,\n          // 根据date_unit使用不同的字段名\n          name: DATE_FIELD_NAME[date_unit],\n          // 时间作为维度时使用到的标识字段 标识进行空数据填充\n          data_fill: true\n        }],\n        num_fields: [{\n          alias: ALIAS_API_ERROR_COUNT,\n          name: 'incorrect_total',\n          fomula: 'sum',\n          type: 'line'\n        }, {\n          alias: ALIAS_API_ERROR_AFFECTED_USER_COUNT,\n          name: 'users',\n          fomula: 'sum',\n          yAxisIndex: 1,\n          type: 'line'\n        }],\n        order_by: [`${ALIAS_TIME}$asc`],\n        // 对echart图表传入的额外option\n        tooltip: {\n          axisPointer: {\n            type: 'line',\n            lineStyle: {\n              color: '#8C9BA5',\n              opacity: 0.6\n            }\n          }\n        },\n        value_axis: [{\n          name: '次数',\n        }, {\n          name: '用户数',\n          splitLine: {\n            show: false\n          }\n        }],\n        category_axis: {\n          axisLabel: {\n            interval: 'auto'\n          }\n        }\n      }\n    };\n    const model = {\n      date_unit,\n      ...obj,\n      // 利用tab数据覆盖一些上层参数属性 比如order_by\n      ...tabData[tabKey]\n    };\n    // 如果是有额外num的场景 进行替换\n    if (tabKey !== 'trend' && extra_num_field) {\n      model.num_fields = [extra_num_field];\n      model.order_by = order_by;\n    }\n    \n    return model;\n  }\n}\n"],"sourceRoot":""}